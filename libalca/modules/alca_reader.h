#ifndef ALCA_READER_H
#define ALCA_READER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef FLATBUFFERS_COMMON_READER_H
#include "flatbuffers_common_reader.h"
#endif
#include "flatcc/flatcc_flatbuffers.h"
#ifndef __alignas_is_defined
#include <stdalign.h>
#endif
#include "flatcc/flatcc_prologue.h"
#ifndef flatbuffers_identifier
#define flatbuffers_identifier 0
#endif
#ifndef flatbuffers_extension
#define flatbuffers_extension "bin"
#endif


typedef const struct Sensor_FileSection_table *Sensor_FileSection_table_t;
typedef struct Sensor_FileSection_table *Sensor_FileSection_mutable_table_t;
typedef const flatbuffers_uoffset_t *Sensor_FileSection_vec_t;
typedef flatbuffers_uoffset_t *Sensor_FileSection_mutable_vec_t;
typedef const struct Sensor_FileImport_table *Sensor_FileImport_table_t;
typedef struct Sensor_FileImport_table *Sensor_FileImport_mutable_table_t;
typedef const flatbuffers_uoffset_t *Sensor_FileImport_vec_t;
typedef flatbuffers_uoffset_t *Sensor_FileImport_mutable_vec_t;
typedef const struct Sensor_WinPE_table *Sensor_WinPE_table_t;
typedef struct Sensor_WinPE_table *Sensor_WinPE_mutable_table_t;
typedef const flatbuffers_uoffset_t *Sensor_WinPE_vec_t;
typedef flatbuffers_uoffset_t *Sensor_WinPE_mutable_vec_t;
typedef const struct Sensor_FileEvent_table *Sensor_FileEvent_table_t;
typedef struct Sensor_FileEvent_table *Sensor_FileEvent_mutable_table_t;
typedef const flatbuffers_uoffset_t *Sensor_FileEvent_vec_t;
typedef flatbuffers_uoffset_t *Sensor_FileEvent_mutable_vec_t;
typedef const struct Sensor_NetworkEvent_table *Sensor_NetworkEvent_table_t;
typedef struct Sensor_NetworkEvent_table *Sensor_NetworkEvent_mutable_table_t;
typedef const flatbuffers_uoffset_t *Sensor_NetworkEvent_vec_t;
typedef flatbuffers_uoffset_t *Sensor_NetworkEvent_mutable_vec_t;
typedef const struct Sensor_WinProcess_table *Sensor_WinProcess_table_t;
typedef struct Sensor_WinProcess_table *Sensor_WinProcess_mutable_table_t;
typedef const flatbuffers_uoffset_t *Sensor_WinProcess_vec_t;
typedef flatbuffers_uoffset_t *Sensor_WinProcess_mutable_vec_t;
typedef const struct Sensor_ProcessEvent_table *Sensor_ProcessEvent_table_t;
typedef struct Sensor_ProcessEvent_table *Sensor_ProcessEvent_mutable_table_t;
typedef const flatbuffers_uoffset_t *Sensor_ProcessEvent_vec_t;
typedef flatbuffers_uoffset_t *Sensor_ProcessEvent_mutable_vec_t;
typedef const struct Sensor_RegistryValue_table *Sensor_RegistryValue_table_t;
typedef struct Sensor_RegistryValue_table *Sensor_RegistryValue_mutable_table_t;
typedef const flatbuffers_uoffset_t *Sensor_RegistryValue_vec_t;
typedef flatbuffers_uoffset_t *Sensor_RegistryValue_mutable_vec_t;
typedef const struct Sensor_RegistryEvent_table *Sensor_RegistryEvent_table_t;
typedef struct Sensor_RegistryEvent_table *Sensor_RegistryEvent_mutable_table_t;
typedef const flatbuffers_uoffset_t *Sensor_RegistryEvent_vec_t;
typedef flatbuffers_uoffset_t *Sensor_RegistryEvent_mutable_vec_t;
#ifndef Sensor_FileSection_file_identifier
#define Sensor_FileSection_file_identifier 0
#endif
/* deprecated, use Sensor_FileSection_file_identifier */
#ifndef Sensor_FileSection_identifier
#define Sensor_FileSection_identifier 0
#endif
#define Sensor_FileSection_type_hash ((flatbuffers_thash_t)0xbe5ca6c0)
#define Sensor_FileSection_type_identifier "\xc0\xa6\x5c\xbe"
#ifndef Sensor_FileSection_file_extension
#define Sensor_FileSection_file_extension "bin"
#endif
#ifndef Sensor_FileImport_file_identifier
#define Sensor_FileImport_file_identifier 0
#endif
/* deprecated, use Sensor_FileImport_file_identifier */
#ifndef Sensor_FileImport_identifier
#define Sensor_FileImport_identifier 0
#endif
#define Sensor_FileImport_type_hash ((flatbuffers_thash_t)0x2ca30598)
#define Sensor_FileImport_type_identifier "\x98\x05\xa3\x2c"
#ifndef Sensor_FileImport_file_extension
#define Sensor_FileImport_file_extension "bin"
#endif
#ifndef Sensor_WinPE_file_identifier
#define Sensor_WinPE_file_identifier 0
#endif
/* deprecated, use Sensor_WinPE_file_identifier */
#ifndef Sensor_WinPE_identifier
#define Sensor_WinPE_identifier 0
#endif
#define Sensor_WinPE_type_hash ((flatbuffers_thash_t)0x9118ac90)
#define Sensor_WinPE_type_identifier "\x90\xac\x18\x91"
#ifndef Sensor_WinPE_file_extension
#define Sensor_WinPE_file_extension "bin"
#endif
#ifndef Sensor_FileEvent_file_identifier
#define Sensor_FileEvent_file_identifier 0
#endif
/* deprecated, use Sensor_FileEvent_file_identifier */
#ifndef Sensor_FileEvent_identifier
#define Sensor_FileEvent_identifier 0
#endif
#define Sensor_FileEvent_type_hash ((flatbuffers_thash_t)0xa5d84b1b)
#define Sensor_FileEvent_type_identifier "\x1b\x4b\xd8\xa5"
#ifndef Sensor_FileEvent_file_extension
#define Sensor_FileEvent_file_extension "bin"
#endif
#ifndef Sensor_NetworkEvent_file_identifier
#define Sensor_NetworkEvent_file_identifier 0
#endif
/* deprecated, use Sensor_NetworkEvent_file_identifier */
#ifndef Sensor_NetworkEvent_identifier
#define Sensor_NetworkEvent_identifier 0
#endif
#define Sensor_NetworkEvent_type_hash ((flatbuffers_thash_t)0xfabc7cc5)
#define Sensor_NetworkEvent_type_identifier "\xc5\x7c\xbc\xfa"
#ifndef Sensor_NetworkEvent_file_extension
#define Sensor_NetworkEvent_file_extension "bin"
#endif
#ifndef Sensor_WinProcess_file_identifier
#define Sensor_WinProcess_file_identifier 0
#endif
/* deprecated, use Sensor_WinProcess_file_identifier */
#ifndef Sensor_WinProcess_identifier
#define Sensor_WinProcess_identifier 0
#endif
#define Sensor_WinProcess_type_hash ((flatbuffers_thash_t)0xf2f4f194)
#define Sensor_WinProcess_type_identifier "\x94\xf1\xf4\xf2"
#ifndef Sensor_WinProcess_file_extension
#define Sensor_WinProcess_file_extension "bin"
#endif
#ifndef Sensor_ProcessEvent_file_identifier
#define Sensor_ProcessEvent_file_identifier 0
#endif
/* deprecated, use Sensor_ProcessEvent_file_identifier */
#ifndef Sensor_ProcessEvent_identifier
#define Sensor_ProcessEvent_identifier 0
#endif
#define Sensor_ProcessEvent_type_hash ((flatbuffers_thash_t)0x25af6194)
#define Sensor_ProcessEvent_type_identifier "\x94\x61\xaf\x25"
#ifndef Sensor_ProcessEvent_file_extension
#define Sensor_ProcessEvent_file_extension "bin"
#endif
#ifndef Sensor_RegistryValue_file_identifier
#define Sensor_RegistryValue_file_identifier 0
#endif
/* deprecated, use Sensor_RegistryValue_file_identifier */
#ifndef Sensor_RegistryValue_identifier
#define Sensor_RegistryValue_identifier 0
#endif
#define Sensor_RegistryValue_type_hash ((flatbuffers_thash_t)0x2e645a79)
#define Sensor_RegistryValue_type_identifier "\x79\x5a\x64\x2e"
#ifndef Sensor_RegistryValue_file_extension
#define Sensor_RegistryValue_file_extension "bin"
#endif
#ifndef Sensor_RegistryEvent_file_identifier
#define Sensor_RegistryEvent_file_identifier 0
#endif
/* deprecated, use Sensor_RegistryEvent_file_identifier */
#ifndef Sensor_RegistryEvent_identifier
#define Sensor_RegistryEvent_identifier 0
#endif
#define Sensor_RegistryEvent_type_hash ((flatbuffers_thash_t)0xc5f7ed30)
#define Sensor_RegistryEvent_type_identifier "\x30\xed\xf7\xc5"
#ifndef Sensor_RegistryEvent_file_extension
#define Sensor_RegistryEvent_file_extension "bin"
#endif

typedef int8_t Sensor_FileAction_enum_t;
__flatbuffers_define_integer_type(Sensor_FileAction, Sensor_FileAction_enum_t, 8)
#define Sensor_FileAction_FileCreate ((Sensor_FileAction_enum_t)INT8_C(0))
#define Sensor_FileAction_FileRename ((Sensor_FileAction_enum_t)INT8_C(1))
#define Sensor_FileAction_FileDelete ((Sensor_FileAction_enum_t)INT8_C(2))
#define Sensor_FileAction_FileModify ((Sensor_FileAction_enum_t)INT8_C(3))

static inline const char *Sensor_FileAction_name(Sensor_FileAction_enum_t value)
{
    switch (value) {
    case Sensor_FileAction_FileCreate: return "FileCreate";
    case Sensor_FileAction_FileRename: return "FileRename";
    case Sensor_FileAction_FileDelete: return "FileDelete";
    case Sensor_FileAction_FileModify: return "FileModify";
    default: return "";
    }
}

static inline int Sensor_FileAction_is_known_value(Sensor_FileAction_enum_t value)
{
    switch (value) {
    case Sensor_FileAction_FileCreate: return 1;
    case Sensor_FileAction_FileRename: return 1;
    case Sensor_FileAction_FileDelete: return 1;
    case Sensor_FileAction_FileModify: return 1;
    default: return 0;
    }
}

typedef int8_t Sensor_NetworkAction_enum_t;
__flatbuffers_define_integer_type(Sensor_NetworkAction, Sensor_NetworkAction_enum_t, 8)
#define Sensor_NetworkAction_NetAccept ((Sensor_NetworkAction_enum_t)INT8_C(0))
#define Sensor_NetworkAction_NetConnect ((Sensor_NetworkAction_enum_t)INT8_C(1))
#define Sensor_NetworkAction_NetDisconnect ((Sensor_NetworkAction_enum_t)INT8_C(2))
#define Sensor_NetworkAction_NetSend ((Sensor_NetworkAction_enum_t)INT8_C(3))
#define Sensor_NetworkAction_NetReceive ((Sensor_NetworkAction_enum_t)INT8_C(4))

static inline const char *Sensor_NetworkAction_name(Sensor_NetworkAction_enum_t value)
{
    switch (value) {
    case Sensor_NetworkAction_NetAccept: return "NetAccept";
    case Sensor_NetworkAction_NetConnect: return "NetConnect";
    case Sensor_NetworkAction_NetDisconnect: return "NetDisconnect";
    case Sensor_NetworkAction_NetSend: return "NetSend";
    case Sensor_NetworkAction_NetReceive: return "NetReceive";
    default: return "";
    }
}

static inline int Sensor_NetworkAction_is_known_value(Sensor_NetworkAction_enum_t value)
{
    switch (value) {
    case Sensor_NetworkAction_NetAccept: return 1;
    case Sensor_NetworkAction_NetConnect: return 1;
    case Sensor_NetworkAction_NetDisconnect: return 1;
    case Sensor_NetworkAction_NetSend: return 1;
    case Sensor_NetworkAction_NetReceive: return 1;
    default: return 0;
    }
}

typedef int8_t Sensor_ProcessAction_enum_t;
__flatbuffers_define_integer_type(Sensor_ProcessAction, Sensor_ProcessAction_enum_t, 8)
#define Sensor_ProcessAction_ProcessStart ((Sensor_ProcessAction_enum_t)INT8_C(0))
#define Sensor_ProcessAction_ProcessEnd ((Sensor_ProcessAction_enum_t)INT8_C(1))
#define Sensor_ProcessAction_ThreadCreate ((Sensor_ProcessAction_enum_t)INT8_C(2))
#define Sensor_ProcessAction_ThreadTerminate ((Sensor_ProcessAction_enum_t)INT8_C(3))
#define Sensor_ProcessAction_ImageLoad ((Sensor_ProcessAction_enum_t)INT8_C(4))
#define Sensor_ProcessAction_ImageUnload ((Sensor_ProcessAction_enum_t)INT8_C(5))
#define Sensor_ProcessAction_AllocLocal ((Sensor_ProcessAction_enum_t)INT8_C(6))
#define Sensor_ProcessAction_AllocRemote ((Sensor_ProcessAction_enum_t)INT8_C(7))

static inline const char *Sensor_ProcessAction_name(Sensor_ProcessAction_enum_t value)
{
    switch (value) {
    case Sensor_ProcessAction_ProcessStart: return "ProcessStart";
    case Sensor_ProcessAction_ProcessEnd: return "ProcessEnd";
    case Sensor_ProcessAction_ThreadCreate: return "ThreadCreate";
    case Sensor_ProcessAction_ThreadTerminate: return "ThreadTerminate";
    case Sensor_ProcessAction_ImageLoad: return "ImageLoad";
    case Sensor_ProcessAction_ImageUnload: return "ImageUnload";
    case Sensor_ProcessAction_AllocLocal: return "AllocLocal";
    case Sensor_ProcessAction_AllocRemote: return "AllocRemote";
    default: return "";
    }
}

static inline int Sensor_ProcessAction_is_known_value(Sensor_ProcessAction_enum_t value)
{
    switch (value) {
    case Sensor_ProcessAction_ProcessStart: return 1;
    case Sensor_ProcessAction_ProcessEnd: return 1;
    case Sensor_ProcessAction_ThreadCreate: return 1;
    case Sensor_ProcessAction_ThreadTerminate: return 1;
    case Sensor_ProcessAction_ImageLoad: return 1;
    case Sensor_ProcessAction_ImageUnload: return 1;
    case Sensor_ProcessAction_AllocLocal: return 1;
    case Sensor_ProcessAction_AllocRemote: return 1;
    default: return 0;
    }
}

typedef int8_t Sensor_RegistryAction_enum_t;
__flatbuffers_define_integer_type(Sensor_RegistryAction, Sensor_RegistryAction_enum_t, 8)
#define Sensor_RegistryAction_RegCreateKey ((Sensor_RegistryAction_enum_t)INT8_C(0))
#define Sensor_RegistryAction_RegSetValue ((Sensor_RegistryAction_enum_t)INT8_C(1))
#define Sensor_RegistryAction_RegDeleteKey ((Sensor_RegistryAction_enum_t)INT8_C(2))
#define Sensor_RegistryAction_RegDeleteValue ((Sensor_RegistryAction_enum_t)INT8_C(3))

static inline const char *Sensor_RegistryAction_name(Sensor_RegistryAction_enum_t value)
{
    switch (value) {
    case Sensor_RegistryAction_RegCreateKey: return "RegCreateKey";
    case Sensor_RegistryAction_RegSetValue: return "RegSetValue";
    case Sensor_RegistryAction_RegDeleteKey: return "RegDeleteKey";
    case Sensor_RegistryAction_RegDeleteValue: return "RegDeleteValue";
    default: return "";
    }
}

static inline int Sensor_RegistryAction_is_known_value(Sensor_RegistryAction_enum_t value)
{
    switch (value) {
    case Sensor_RegistryAction_RegCreateKey: return 1;
    case Sensor_RegistryAction_RegSetValue: return 1;
    case Sensor_RegistryAction_RegDeleteKey: return 1;
    case Sensor_RegistryAction_RegDeleteValue: return 1;
    default: return 0;
    }
}

typedef int8_t Sensor_RegistryValueType_enum_t;
__flatbuffers_define_integer_type(Sensor_RegistryValueType, Sensor_RegistryValueType_enum_t, 8)
#define Sensor_RegistryValueType_RegBinary ((Sensor_RegistryValueType_enum_t)INT8_C(0))
#define Sensor_RegistryValueType_RegDWord ((Sensor_RegistryValueType_enum_t)INT8_C(1))
#define Sensor_RegistryValueType_RegQWord ((Sensor_RegistryValueType_enum_t)INT8_C(2))
#define Sensor_RegistryValueType_RegString ((Sensor_RegistryValueType_enum_t)INT8_C(3))
#define Sensor_RegistryValueType_RegStringList ((Sensor_RegistryValueType_enum_t)INT8_C(4))
#define Sensor_RegistryValueType_RegLink ((Sensor_RegistryValueType_enum_t)INT8_C(5))

static inline const char *Sensor_RegistryValueType_name(Sensor_RegistryValueType_enum_t value)
{
    switch (value) {
    case Sensor_RegistryValueType_RegBinary: return "RegBinary";
    case Sensor_RegistryValueType_RegDWord: return "RegDWord";
    case Sensor_RegistryValueType_RegQWord: return "RegQWord";
    case Sensor_RegistryValueType_RegString: return "RegString";
    case Sensor_RegistryValueType_RegStringList: return "RegStringList";
    case Sensor_RegistryValueType_RegLink: return "RegLink";
    default: return "";
    }
}

static inline int Sensor_RegistryValueType_is_known_value(Sensor_RegistryValueType_enum_t value)
{
    switch (value) {
    case Sensor_RegistryValueType_RegBinary: return 1;
    case Sensor_RegistryValueType_RegDWord: return 1;
    case Sensor_RegistryValueType_RegQWord: return 1;
    case Sensor_RegistryValueType_RegString: return 1;
    case Sensor_RegistryValueType_RegStringList: return 1;
    case Sensor_RegistryValueType_RegLink: return 1;
    default: return 0;
    }
}



struct Sensor_FileSection_table { uint8_t unused__; };

static inline size_t Sensor_FileSection_vec_len(Sensor_FileSection_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Sensor_FileSection_table_t Sensor_FileSection_vec_at(Sensor_FileSection_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Sensor_FileSection_table_t, vec, i, 0)
__flatbuffers_table_as_root(Sensor_FileSection)

__flatbuffers_define_string_field(0, Sensor_FileSection, name, 0)
__flatbuffers_define_scalar_field(1, Sensor_FileSection, size, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(2, Sensor_FileSection, entropy, flatbuffers_int64, int64_t, INT64_C(0))

struct Sensor_FileImport_table { uint8_t unused__; };

static inline size_t Sensor_FileImport_vec_len(Sensor_FileImport_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Sensor_FileImport_table_t Sensor_FileImport_vec_at(Sensor_FileImport_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Sensor_FileImport_table_t, vec, i, 0)
__flatbuffers_table_as_root(Sensor_FileImport)

__flatbuffers_define_string_field(0, Sensor_FileImport, name, 0)
__flatbuffers_define_vector_field(1, Sensor_FileImport, functions, flatbuffers_string_vec_t, 0)

struct Sensor_WinPE_table { uint8_t unused__; };

static inline size_t Sensor_WinPE_vec_len(Sensor_WinPE_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Sensor_WinPE_table_t Sensor_WinPE_vec_at(Sensor_WinPE_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Sensor_WinPE_table_t, vec, i, 0)
__flatbuffers_table_as_root(Sensor_WinPE)

__flatbuffers_define_string_field(0, Sensor_WinPE, arch, 0)
__flatbuffers_define_scalar_field(1, Sensor_WinPE, is_dotnet, flatbuffers_bool, flatbuffers_bool_t, UINT8_C(0))
__flatbuffers_define_vector_field(2, Sensor_WinPE, sections, Sensor_FileSection_vec_t, 0)
__flatbuffers_define_vector_field(3, Sensor_WinPE, imports, Sensor_FileImport_vec_t, 0)

struct Sensor_FileEvent_table { uint8_t unused__; };

static inline size_t Sensor_FileEvent_vec_len(Sensor_FileEvent_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Sensor_FileEvent_table_t Sensor_FileEvent_vec_at(Sensor_FileEvent_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Sensor_FileEvent_table_t, vec, i, 0)
__flatbuffers_table_as_root(Sensor_FileEvent)

__flatbuffers_define_scalar_field(0, Sensor_FileEvent, action, Sensor_FileAction, Sensor_FileAction_enum_t, INT8_C(0))
__flatbuffers_define_string_field(1, Sensor_FileEvent, name, 0)
__flatbuffers_define_string_field(2, Sensor_FileEvent, path, 0)
__flatbuffers_define_string_field(3, Sensor_FileEvent, directory, 0)
__flatbuffers_define_string_field(4, Sensor_FileEvent, extension, 0)
__flatbuffers_define_string_field(5, Sensor_FileEvent, owner, 0)
__flatbuffers_define_scalar_field(6, Sensor_FileEvent, size, flatbuffers_int64, int64_t, INT64_C(0))
__flatbuffers_define_scalar_field(7, Sensor_FileEvent, mode, flatbuffers_int16, int16_t, INT16_C(0))
__flatbuffers_define_scalar_field(8, Sensor_FileEvent, created_at, flatbuffers_int64, int64_t, INT64_C(0))
__flatbuffers_define_scalar_field(9, Sensor_FileEvent, modified_at, flatbuffers_int64, int64_t, INT64_C(0))
__flatbuffers_define_table_field(10, Sensor_FileEvent, pe, Sensor_WinPE_table_t, 0)
__flatbuffers_define_string_field(11, Sensor_FileEvent, new_name, 0)

struct Sensor_NetworkEvent_table { uint8_t unused__; };

static inline size_t Sensor_NetworkEvent_vec_len(Sensor_NetworkEvent_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Sensor_NetworkEvent_table_t Sensor_NetworkEvent_vec_at(Sensor_NetworkEvent_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Sensor_NetworkEvent_table_t, vec, i, 0)
__flatbuffers_table_as_root(Sensor_NetworkEvent)

__flatbuffers_define_scalar_field(0, Sensor_NetworkEvent, action, Sensor_NetworkAction, Sensor_NetworkAction_enum_t, INT8_C(0))
__flatbuffers_define_scalar_field(1, Sensor_NetworkEvent, tcp, flatbuffers_bool, flatbuffers_bool_t, UINT8_C(0))
__flatbuffers_define_scalar_field(2, Sensor_NetworkEvent, udp, flatbuffers_bool, flatbuffers_bool_t, UINT8_C(0))
__flatbuffers_define_string_field(3, Sensor_NetworkEvent, local_addr, 0)
__flatbuffers_define_scalar_field(4, Sensor_NetworkEvent, local_port, flatbuffers_int16, int16_t, INT16_C(0))
__flatbuffers_define_string_field(5, Sensor_NetworkEvent, remote_addr, 0)
__flatbuffers_define_scalar_field(6, Sensor_NetworkEvent, remote_port, flatbuffers_int16, int16_t, INT16_C(0))
__flatbuffers_define_scalar_field(7, Sensor_NetworkEvent, packet_size, flatbuffers_int32, int32_t, INT32_C(0))

struct Sensor_WinProcess_table { uint8_t unused__; };

static inline size_t Sensor_WinProcess_vec_len(Sensor_WinProcess_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Sensor_WinProcess_table_t Sensor_WinProcess_vec_at(Sensor_WinProcess_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Sensor_WinProcess_table_t, vec, i, 0)
__flatbuffers_table_as_root(Sensor_WinProcess)

__flatbuffers_define_string_field(0, Sensor_WinProcess, image_name, 0)
__flatbuffers_define_scalar_field(1, Sensor_WinProcess, image_size, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(2, Sensor_WinProcess, alloc_size, flatbuffers_int64, int64_t, INT64_C(0))
__flatbuffers_define_vector_field(3, Sensor_WinProcess, alloc_data, flatbuffers_uint8_vec_t, 0)

struct Sensor_ProcessEvent_table { uint8_t unused__; };

static inline size_t Sensor_ProcessEvent_vec_len(Sensor_ProcessEvent_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Sensor_ProcessEvent_table_t Sensor_ProcessEvent_vec_at(Sensor_ProcessEvent_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Sensor_ProcessEvent_table_t, vec, i, 0)
__flatbuffers_table_as_root(Sensor_ProcessEvent)

__flatbuffers_define_scalar_field(0, Sensor_ProcessEvent, action, Sensor_ProcessAction, Sensor_ProcessAction_enum_t, INT8_C(0))
__flatbuffers_define_scalar_field(1, Sensor_ProcessEvent, pid, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(2, Sensor_ProcessEvent, ppid, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_scalar_field(3, Sensor_ProcessEvent, self_pid, flatbuffers_int32, int32_t, INT32_C(0))
__flatbuffers_define_string_field(4, Sensor_ProcessEvent, name, 0)
__flatbuffers_define_string_field(5, Sensor_ProcessEvent, command_line, 0)
__flatbuffers_define_table_field(6, Sensor_ProcessEvent, win, Sensor_WinProcess_table_t, 0)

struct Sensor_RegistryValue_table { uint8_t unused__; };

static inline size_t Sensor_RegistryValue_vec_len(Sensor_RegistryValue_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Sensor_RegistryValue_table_t Sensor_RegistryValue_vec_at(Sensor_RegistryValue_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Sensor_RegistryValue_table_t, vec, i, 0)
__flatbuffers_table_as_root(Sensor_RegistryValue)

__flatbuffers_define_scalar_field(0, Sensor_RegistryValue, int_, flatbuffers_int64, int64_t, INT64_C(0))
__flatbuffers_define_string_field(1, Sensor_RegistryValue, str_, 0)
__flatbuffers_define_vector_field(2, Sensor_RegistryValue, strlist, flatbuffers_string_vec_t, 0)
__flatbuffers_define_vector_field(3, Sensor_RegistryValue, binary, flatbuffers_uint8_vec_t, 0)

struct Sensor_RegistryEvent_table { uint8_t unused__; };

static inline size_t Sensor_RegistryEvent_vec_len(Sensor_RegistryEvent_vec_t vec)
__flatbuffers_vec_len(vec)
static inline Sensor_RegistryEvent_table_t Sensor_RegistryEvent_vec_at(Sensor_RegistryEvent_vec_t vec, size_t i)
__flatbuffers_offset_vec_at(Sensor_RegistryEvent_table_t, vec, i, 0)
__flatbuffers_table_as_root(Sensor_RegistryEvent)

__flatbuffers_define_scalar_field(0, Sensor_RegistryEvent, action, Sensor_RegistryAction, Sensor_RegistryAction_enum_t, INT8_C(0))
__flatbuffers_define_string_field(1, Sensor_RegistryEvent, key_path, 0)
__flatbuffers_define_string_field(2, Sensor_RegistryEvent, value_name, 0)
__flatbuffers_define_scalar_field(3, Sensor_RegistryEvent, value_type, Sensor_RegistryValueType, Sensor_RegistryValueType_enum_t, INT8_C(0))
__flatbuffers_define_table_field(4, Sensor_RegistryEvent, value, Sensor_RegistryValue_table_t, 0)


#include "flatcc/flatcc_epilogue.h"
#endif /* ALCA_READER_H */
